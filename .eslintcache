[{"/Users/irisli/codebase/coin-market-app/src/App.js":"1","/Users/irisli/codebase/coin-market-app/src/reportWebVitals.js":"2","/Users/irisli/codebase/coin-market-app/src/services/symbolAPI.js":"3","/Users/irisli/codebase/coin-market-app/src/thunks/symbolThunk.js":"4","/Users/irisli/codebase/coin-market-app/src/utils/constants.js":"5","/Users/irisli/codebase/coin-market-app/src/index.js":"6","/Users/irisli/codebase/coin-market-app/src/reducers/index.js":"7","/Users/irisli/codebase/coin-market-app/src/actions/symbols.js":"8","/Users/irisli/codebase/coin-market-app/src/reducers/symbolReducer.js":"9","/Users/irisli/codebase/coin-market-app/src/components/cryptoItem.js":"10","/Users/irisli/codebase/coin-market-app/src/thunks/quotesThunk.js":"11","/Users/irisli/codebase/coin-market-app/src/services/quotesAPI.js":"12","/Users/irisli/codebase/coin-market-app/src/reducers/quotesReducer.js":"13","/Users/irisli/codebase/coin-market-app/src/actions/quotes.js":"14","/Users/irisli/codebase/coin-market-app/src/components/cryptoMarket.js":"15","/Users/irisli/codebase/coin-market-app/src/components/cryptoSelect.js":"16","/Users/irisli/codebase/coin-market-app/src/components/CryptoTable.js":"17","/Users/irisli/codebase/coin-market-app/src/components/cryptoTable.js":"18","/Users/irisli/codebase/coin-market-app/src/components/symbolContext.js":"19","/Users/irisli/codebase/coin-market-app/src/components/quoteContext.js":"20"},{"size":191,"mtime":1612233723373,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1612219301066,"results":"23","hashOfConfig":"22"},{"size":246,"mtime":1612529014377,"results":"24","hashOfConfig":"22"},{"size":950,"mtime":1612529036903,"results":"25","hashOfConfig":"22"},{"size":280,"mtime":1612294548064,"results":"26","hashOfConfig":"22"},{"size":777,"mtime":1612275502152,"results":"27","hashOfConfig":"22"},{"size":235,"mtime":1612274798282,"results":"28","hashOfConfig":"22"},{"size":275,"mtime":1612227095848,"results":"29","hashOfConfig":"22"},{"size":517,"mtime":1612372861517,"results":"30","hashOfConfig":"22"},{"size":2138,"mtime":1612627244776,"results":"31","hashOfConfig":"22"},{"size":568,"mtime":1612528969146,"results":"32","hashOfConfig":"22"},{"size":269,"mtime":1612528863102,"results":"33","hashOfConfig":"22"},{"size":527,"mtime":1612627193688,"results":"34","hashOfConfig":"22"},{"size":273,"mtime":1612231891114,"results":"35","hashOfConfig":"22"},{"size":1244,"mtime":1612287372417,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1612360792824,"results":"37","hashOfConfig":"22"},{"size":1112,"mtime":1612279201875,"results":"38","hashOfConfig":"22"},{"size":1572,"mtime":1612533405242,"results":"39","hashOfConfig":"22"},{"size":114,"mtime":1612234120047,"results":"40","hashOfConfig":"22"},{"size":112,"mtime":1612283672988,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"37l89r",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/irisli/codebase/coin-market-app/src/App.js",[],"/Users/irisli/codebase/coin-market-app/src/reportWebVitals.js",[],["91","92"],"/Users/irisli/codebase/coin-market-app/src/services/symbolAPI.js",[],"/Users/irisli/codebase/coin-market-app/src/thunks/symbolThunk.js",[],["93","94"],"/Users/irisli/codebase/coin-market-app/src/utils/constants.js",[],"/Users/irisli/codebase/coin-market-app/src/index.js",[],["95","96"],"/Users/irisli/codebase/coin-market-app/src/reducers/index.js",[],["97","98"],"/Users/irisli/codebase/coin-market-app/src/actions/symbols.js",[],["99","100"],"/Users/irisli/codebase/coin-market-app/src/reducers/symbolReducer.js",[],"/Users/irisli/codebase/coin-market-app/src/components/cryptoItem.js",["101","102","103"],"/Users/irisli/codebase/coin-market-app/src/thunks/quotesThunk.js",[],"/Users/irisli/codebase/coin-market-app/src/services/quotesAPI.js",[],"/Users/irisli/codebase/coin-market-app/src/reducers/quotesReducer.js",[],"/Users/irisli/codebase/coin-market-app/src/actions/quotes.js",[],"/Users/irisli/codebase/coin-market-app/src/components/cryptoMarket.js",["104"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSymbolsList } from '../thunks/symbolThunk';\nimport { getSymbolListSuccess, setSymbolListError } from '../actions/symbols';\nimport SymbolContext from './symbolContext';\nimport CryptoTable from './cryptoTable';\nimport CryptoSelect from './cryptoSelect';\n\nconst CryptoMarket = ({ symbolsList, symbolsError, quotesError, getSymbolListSuccess, setSymbolListError }) => {\n   \n   const [ visibleSymbolIds, setVisibleSymbolIds ] = useState([]);\n   \n   useEffect(() => {\n      fetchSymbolsList(getSymbolListSuccess, setSymbolListError, setVisibleSymbolIds);\n   }, []);\n\n   \n   return (\n      <SymbolContext.Provider \n         value={{ symbolsList, symbolsError, quotesError, visibleSymbolIds, setVisibleSymbolIds, getSymbolListSuccess, setSymbolListError }}\n      >\n      <div>\n         <CryptoSelect />\n         <CryptoTable />\n      </div>\n      </SymbolContext.Provider>\n   )\n};\n\nconst mapStateToProps = state => ({ symbolsList: state.symbolsList.list, symbolsError: state.symbolsList.error, quotesError: state.quotesInfoList.error })\n\nexport default connect(mapStateToProps, {\n    getSymbolListSuccess, \n    setSymbolListError\n})(CryptoMarket);","/Users/irisli/codebase/coin-market-app/src/components/cryptoSelect.js",["105"],"import React, { useContext, useState } from 'react';\nimport { Select } from '@material-ui/core';\nimport SymbolContext from './symbolContext';\n\nconst CryptoSelect = () => {\n    const ADD_MORE = 'add-more';\n    const { symbolsList, visibleSymbolIds, setVisibleSymbolIds } = useContext(SymbolContext);\n    \n    const handleSelect = (e) => {\n        let selectedId;\n        if(e.target.value !== ''){\n            selectedId = parseInt(e.target.value);\n            setVisibleSymbolIds([...visibleSymbolIds, selectedId]);\n        }\n    }\n\n    return (\n        <div className=\"crypto-select\">\n        <label className=\"crypto-label\">\n            Select to Add:\n        </label>\n        <Select disabled={symbolsList.length===visibleSymbolIds.length} native={true} autoWidth={true} value={ADD_MORE} onChange={(e) => handleSelect(e)}>\n            <option value={ADD_MORE}> Add More Symbols :) </option>\n            {symbolsList\n                .filter(symbol => !visibleSymbolIds.includes(symbol.id))\n                .map((symbol, idx) => (<option value={symbol.id} key={`${idx}`}>{symbol.symbol}</option>))    \n            }\n            \n        </Select>\n       \n        </div>\n    )\n};\nexport default CryptoSelect;","/Users/irisli/codebase/coin-market-app/src/components/CryptoTable.js",["106","107"],"/Users/irisli/codebase/coin-market-app/src/components/cryptoTable.js",["108"],"import React, { useContext, useEffect } from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { Table } from '@material-ui/core';\nimport { TableHead } from '@material-ui/core';\nimport { TableBody } from '@material-ui/core';\nimport { TableRow } from '@material-ui/core';\nimport { TableCell } from '@material-ui/core';\nimport SymbolContext from './symbolContext';\nimport CryptoItem from './cryptoItem';\n\nconst CryptoTable = () => {\n   \n   const { symbolsList, visibleSymbolIds, symbolsError, quotesError } = useContext(SymbolContext);\n\n   \n   return (\n      <React.Fragment>\n         {symbolsError && Array.isArray(symbolsError) && symbolsError.length>0 && <Alert color=\"error\">{symbolsError.join(', ')}</Alert>}\n         {quotesError && Array.isArray(quotesError) && quotesError.length>0 && <Alert color=\"error\">{quotesError.join(', ')}</Alert>}\n         <Table>\n            <TableHead>\n               <TableRow>\n                  <TableCell>Symbol</TableCell>\n                  <TableCell>CMC Rank</TableCell>\n                  <TableCell>Price(USD)</TableCell>\n                  <TableCell>Delete</TableCell>\n               </TableRow>\n            </TableHead>\n            <TableBody>\n            { symbolsList.filter(symbol => visibleSymbolIds.includes(symbol.id)).map((symbol, idx) => (\n               <TableRow className=\"table-row\" width=\"100%\" key={`${idx}`}> \n                  <CryptoItem symbol={symbol} /> \n               </TableRow>\n            ))}\n            </TableBody>\n         </Table>\n      </React.Fragment>\n   )\n};\n\nexport default CryptoTable;","/Users/irisli/codebase/coin-market-app/src/components/symbolContext.js",["109"],"import React, { createContext } from 'react';\nconst SymbolContext = createContext();\nexport default SymbolContext;","/Users/irisli/codebase/coin-market-app/src/components/quoteContext.js",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"111","replacedBy":"121"},{"ruleId":"113","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":19,"column":8,"nodeType":"125","endLine":19,"endColumn":10,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":28,"column":8,"nodeType":"125","endLine":28,"endColumn":24,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":32,"column":63,"nodeType":"131","messageId":"132","endLine":32,"endColumn":65},{"ruleId":"123","severity":1,"message":"133","line":15,"column":7,"nodeType":"125","endLine":15,"endColumn":9,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":29,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"139","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":13},{"ruleId":"135","severity":1,"message":"140","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":16},{"ruleId":"135","severity":1,"message":"141","line":1,"column":29,"nodeType":"137","messageId":"138","endLine":1,"endColumn":38},{"ruleId":"135","severity":1,"message":"142","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"142","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],["143"],["144"],["143"],["144"],["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuotesListSuccess' and 'symbol.id'. Either include them or remove the dependency array.","ArrayExpression",["145"],"React Hook useEffect has a missing dependency: 'symbol.id'. Either include it or remove the dependency array. If 'setRank' needs the current value of 'symbol.id', you can also switch to useReducer instead of useState and read 'symbol.id' in the reducer.",["146"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getSymbolListSuccess' and 'setSymbolListError'. Either include them or remove the dependency array.",["147"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'sizing' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [getQuotesListSuccess, symbol.id]",{"range":"154","text":"155"},"Update the dependencies array to be: [quotesInfoList, symbol.id]",{"range":"156","text":"157"},"Update the dependencies array to be: [getSymbolListSuccess, setSymbolListError]",{"range":"158","text":"159"},[838,840],"[getQuotesListSuccess, symbol.id]",[1216,1232],"[quotesInfoList, symbol.id]",[660,662],"[getSymbolListSuccess, setSymbolListError]"]