[{"/Users/irisli/codebase/coin-market-app/src/App.js":"1","/Users/irisli/codebase/coin-market-app/src/reportWebVitals.js":"2","/Users/irisli/codebase/coin-market-app/src/services/symbolAPI.js":"3","/Users/irisli/codebase/coin-market-app/src/thunks/symbolThunk.js":"4","/Users/irisli/codebase/coin-market-app/src/utils/constants.js":"5","/Users/irisli/codebase/coin-market-app/src/index.js":"6","/Users/irisli/codebase/coin-market-app/src/reducers/index.js":"7","/Users/irisli/codebase/coin-market-app/src/actions/symbols.js":"8","/Users/irisli/codebase/coin-market-app/src/reducers/symbolReducer.js":"9","/Users/irisli/codebase/coin-market-app/src/components/cryptoItem.js":"10","/Users/irisli/codebase/coin-market-app/src/thunks/quotesThunk.js":"11","/Users/irisli/codebase/coin-market-app/src/services/quotesAPI.js":"12","/Users/irisli/codebase/coin-market-app/src/reducers/quotesReducer.js":"13","/Users/irisli/codebase/coin-market-app/src/actions/quotes.js":"14","/Users/irisli/codebase/coin-market-app/src/components/cryptoMarket.js":"15","/Users/irisli/codebase/coin-market-app/src/components/cryptoSelect.js":"16","/Users/irisli/codebase/coin-market-app/src/components/CryptoTable.js":"17","/Users/irisli/codebase/coin-market-app/src/components/cryptoTable.js":"18","/Users/irisli/codebase/coin-market-app/src/components/symbolContext.js":"19","/Users/irisli/codebase/coin-market-app/src/components/quoteContext.js":"20"},{"size":191,"mtime":1612233723373,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1612219301066,"results":"23","hashOfConfig":"22"},{"size":246,"mtime":1612285314394,"results":"24","hashOfConfig":"22"},{"size":757,"mtime":1612361365539,"results":"25","hashOfConfig":"22"},{"size":280,"mtime":1612294548064,"results":"26","hashOfConfig":"22"},{"size":777,"mtime":1612275502152,"results":"27","hashOfConfig":"22"},{"size":235,"mtime":1612274798282,"results":"28","hashOfConfig":"22"},{"size":275,"mtime":1612227095848,"results":"29","hashOfConfig":"22"},{"size":497,"mtime":1612288222423,"results":"30","hashOfConfig":"22"},{"size":2138,"mtime":1612287717826,"results":"31","hashOfConfig":"22"},{"size":371,"mtime":1612285269576,"results":"32","hashOfConfig":"22"},{"size":269,"mtime":1612273782102,"results":"33","hashOfConfig":"22"},{"size":508,"mtime":1612288160133,"results":"34","hashOfConfig":"22"},{"size":273,"mtime":1612231891114,"results":"35","hashOfConfig":"22"},{"size":1244,"mtime":1612287372417,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1612360792824,"results":"37","hashOfConfig":"22"},{"size":1112,"mtime":1612279201875,"results":"38","hashOfConfig":"22"},{"size":1511,"mtime":1612288284178,"results":"39","hashOfConfig":"22"},{"size":114,"mtime":1612234120047,"results":"40","hashOfConfig":"22"},{"size":112,"mtime":1612283672988,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"37l89r",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/irisli/codebase/coin-market-app/src/App.js",[],"/Users/irisli/codebase/coin-market-app/src/reportWebVitals.js",[],["90","91"],"/Users/irisli/codebase/coin-market-app/src/services/symbolAPI.js",[],"/Users/irisli/codebase/coin-market-app/src/thunks/symbolThunk.js",[],"/Users/irisli/codebase/coin-market-app/src/utils/constants.js",[],["92","93"],"/Users/irisli/codebase/coin-market-app/src/index.js",[],["94","95"],"/Users/irisli/codebase/coin-market-app/src/reducers/index.js",[],["96","97"],"/Users/irisli/codebase/coin-market-app/src/actions/symbols.js",[],"/Users/irisli/codebase/coin-market-app/src/reducers/symbolReducer.js",[],"/Users/irisli/codebase/coin-market-app/src/components/cryptoItem.js",["98","99","100"],"import React, { useContext, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { TableCell } from '@material-ui/core';\nimport { Badge } from '@material-ui/core';\nimport { getQuotesListSuccess, setQuotesListError } from '../actions/quotes';\nimport { fetchQuotesInfo } from '../thunks/quotesThunk';\nimport SymbolContext from './symbolContext';\nimport QuoteContext from './quoteContext';\n\nconst CryptoItem = ({ symbol, getQuotesListSuccess, quotesInfoList }) => {\n    \n    const { visibleSymbolIds, setVisibleSymbolIds } = useContext(SymbolContext);\n    const [ rank, setRank ] = useState(null);\n    const [ quotePrice, setQuotePrice ] = useState(null);\n    \n    useEffect(() => {\n        fetchQuotesInfo(symbol.id, getQuotesListSuccess, setQuotesListError);\n    }, []);\n\n    useEffect(() => {\n        if(quotesInfoList && quotesInfoList[symbol.id] && quotesInfoList[symbol.id].cmc_rank){\n            setRank(quotesInfoList[symbol.id].cmc_rank);\n        }\n        if(quotesInfoList && quotesInfoList[symbol.id]&& quotesInfoList[symbol.id].quote.USD.price){\n            setQuotePrice(quotesInfoList[symbol.id].quote.USD.price);\n        }\n    }, [quotesInfoList]);\n  \n\n    const handleDelete = () => {\n        setVisibleSymbolIds(visibleSymbolIds.filter(id => (id != symbol.id)));\n    }\n\n\n    return (\n        <QuoteContext.Provider value={{ quotesInfoList }}>\n            <React.Fragment>\n                <TableCell>{symbol.symbol} </TableCell>\n                <TableCell>{rank ? `${rank}` : <Badge color=\"error\"> N/A</Badge>} </TableCell>\n                <TableCell>{quotePrice ? `${quotePrice}` : <Badge color=\"error\">N/A</Badge>} </TableCell>\n                <TableCell><Button variant=\"contained\" disabled={visibleSymbolIds.length === 1} color=\"primary\" value={symbol.id} onClick={handleDelete}>Delete</Button></TableCell>\n            </React.Fragment>\n        </QuoteContext.Provider>\n \n    )\n};\n\nconst mapStateToProps = state => ({ quotesInfoList : state.quotesInfoList.list })\n\nexport default connect(mapStateToProps, {\n    getQuotesListSuccess\n})(CryptoItem);","/Users/irisli/codebase/coin-market-app/src/thunks/quotesThunk.js",[],"/Users/irisli/codebase/coin-market-app/src/services/quotesAPI.js",[],"/Users/irisli/codebase/coin-market-app/src/reducers/quotesReducer.js",[],"/Users/irisli/codebase/coin-market-app/src/actions/quotes.js",[],"/Users/irisli/codebase/coin-market-app/src/components/cryptoMarket.js",["101"],"/Users/irisli/codebase/coin-market-app/src/components/cryptoSelect.js",["102"],"import React, { useContext, useState } from 'react';\nimport { Select } from '@material-ui/core';\nimport SymbolContext from './symbolContext';\n\nconst CryptoSelect = () => {\n    const ADD_MORE = 'add-more';\n    const { symbolsList, visibleSymbolIds, setVisibleSymbolIds } = useContext(SymbolContext);\n    \n    const handleSelect = (e) => {\n        let selectedId;\n        if(e.target.value !== ''){\n            selectedId = parseInt(e.target.value);\n            setVisibleSymbolIds([...visibleSymbolIds, selectedId]);\n        }\n    }\n\n    return (\n        <div className=\"crypto-select\">\n        <label className=\"crypto-label\">\n            Select to Add:\n        </label>\n        <Select disabled={symbolsList.length===visibleSymbolIds.length} native={true} autoWidth={true} value={ADD_MORE} onChange={(e) => handleSelect(e)}>\n            <option value={ADD_MORE}> Add More Symbols :) </option>\n            {symbolsList\n                .filter(symbol => !visibleSymbolIds.includes(symbol.id))\n                .map((symbol, idx) => (<option value={symbol.id} key={`${idx}`}>{symbol.symbol}</option>))    \n            }\n            \n        </Select>\n       \n        </div>\n    )\n};\nexport default CryptoSelect;","/Users/irisli/codebase/coin-market-app/src/components/CryptoTable.js",["103","104"],"/Users/irisli/codebase/coin-market-app/src/components/cryptoTable.js",["105"],"import React, { useContext, useEffect } from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { Table } from '@material-ui/core';\nimport { TableHead } from '@material-ui/core';\nimport { TableBody } from '@material-ui/core';\nimport { TableRow } from '@material-ui/core';\nimport { TableCell } from '@material-ui/core';\nimport SymbolContext from './symbolContext';\nimport CryptoItem from './cryptoItem';\n\nconst CryptoTable = () => {\n   \n   const { symbolsList, visibleSymbolIds, symbolsError, quotesError } = useContext(SymbolContext);\n\n   \n   return (\n      <React.Fragment>\n         {symbolsError && symbolsError.length>0 && <Alert color=\"error\">{symbolsError.join(', ')}</Alert>}\n         {quotesError && quotesError.length>0 && <Alert color=\"error\">{quotesError.join(', ')}</Alert>}\n         <Table>\n            <TableHead>\n               <TableRow>\n                  <TableCell>Symbol</TableCell>\n                  <TableCell>CMC Rank</TableCell>\n                  <TableCell>Price(USD)</TableCell>\n                  <TableCell>Delete</TableCell>\n               </TableRow>\n            </TableHead>\n            <TableBody>\n            { symbolsList.filter(symbol => visibleSymbolIds.includes(symbol.id)).map((symbol, idx) => (\n               <TableRow className=\"table-row\" width=\"100%\" key={`${idx}`}> \n                  <CryptoItem symbol={symbol} /> \n               </TableRow>\n            ))}\n            </TableBody>\n         </Table>\n      </React.Fragment>\n   )\n};\n\nexport default CryptoTable;","/Users/irisli/codebase/coin-market-app/src/components/symbolContext.js",["106"],"import React, { createContext } from 'react';\nconst SymbolContext = createContext();\nexport default SymbolContext;","/Users/irisli/codebase/coin-market-app/src/components/quoteContext.js",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"110","replacedBy":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":28,"column":8,"nodeType":"120","endLine":28,"endColumn":24,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":32,"column":63,"nodeType":"126","messageId":"127","endLine":32,"endColumn":65},{"ruleId":"118","severity":1,"message":"128","line":15,"column":7,"nodeType":"120","endLine":15,"endColumn":9,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":29,"nodeType":"132","messageId":"133","endLine":1,"endColumn":37},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},{"ruleId":"130","severity":1,"message":"135","line":8,"column":10,"nodeType":"132","messageId":"133","endLine":8,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":1,"column":29,"nodeType":"132","messageId":"133","endLine":1,"endColumn":38},{"ruleId":"130","severity":1,"message":"137","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"137","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],["138"],["139"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuotesListSuccess' and 'symbol.id'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'symbol.id'. Either include it or remove the dependency array. If 'setRank' needs the current value of 'symbol.id', you can also switch to useReducer instead of useState and read 'symbol.id' in the reducer.",["141"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getSymbolListSuccess' and 'setSymbolListError'. Either include them or remove the dependency array.",["142"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'sizing' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [getQuotesListSuccess, symbol.id]",{"range":"149","text":"150"},"Update the dependencies array to be: [quotesInfoList, symbol.id]",{"range":"151","text":"152"},"Update the dependencies array to be: [getSymbolListSuccess, setSymbolListError]",{"range":"153","text":"154"},[838,840],"[getQuotesListSuccess, symbol.id]",[1216,1232],"[quotesInfoList, symbol.id]",[660,662],"[getSymbolListSuccess, setSymbolListError]"]